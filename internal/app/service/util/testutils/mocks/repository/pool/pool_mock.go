// Code generated by MockGen. DO NOT EDIT.
// Source: uniswapper/internal/app/db/repository/pool (interfaces: IPoolLogsRepository)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"
	posts "uniswapper/internal/app/db/dto/pool"

	gomock "github.com/golang/mock/gomock"
)

// MockIPoolLogsRepository is a mock of IPoolLogsRepository interface.
type MockIPoolLogsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIPoolLogsRepositoryMockRecorder
}

// MockIPoolLogsRepositoryMockRecorder is the mock recorder for MockIPoolLogsRepository.
type MockIPoolLogsRepositoryMockRecorder struct {
	mock *MockIPoolLogsRepository
}

// NewMockIPoolLogsRepository creates a new mock instance.
func NewMockIPoolLogsRepository(ctrl *gomock.Controller) *MockIPoolLogsRepository {
	mock := &MockIPoolLogsRepository{ctrl: ctrl}
	mock.recorder = &MockIPoolLogsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPoolLogsRepository) EXPECT() *MockIPoolLogsRepositoryMockRecorder {
	return m.recorder
}

// GetPoolLogs mocks base method.
func (m *MockIPoolLogsRepository) GetPoolLogs(arg0 context.Context, arg1, arg2 string) (posts.Logs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPoolLogs", arg0, arg1, arg2)
	ret0, _ := ret[0].(posts.Logs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPoolLogs indicates an expected call of GetPoolLogs.
func (mr *MockIPoolLogsRepositoryMockRecorder) GetPoolLogs(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPoolLogs", reflect.TypeOf((*MockIPoolLogsRepository)(nil).GetPoolLogs), arg0, arg1, arg2)
}

// GetPoolLogsHistory mocks base method.
func (m *MockIPoolLogsRepository) GetPoolLogsHistory(arg0 context.Context, arg1 string) ([]posts.Logs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPoolLogsHistory", arg0, arg1)
	ret0, _ := ret[0].([]posts.Logs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPoolLogsHistory indicates an expected call of GetPoolLogsHistory.
func (mr *MockIPoolLogsRepositoryMockRecorder) GetPoolLogsHistory(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPoolLogsHistory", reflect.TypeOf((*MockIPoolLogsRepository)(nil).GetPoolLogsHistory), arg0, arg1)
}

// StorePoolLogs mocks base method.
func (m *MockIPoolLogsRepository) StorePoolLogs(arg0 context.Context, arg1 posts.Logs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StorePoolLogs", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// StorePoolLogs indicates an expected call of StorePoolLogs.
func (mr *MockIPoolLogsRepositoryMockRecorder) StorePoolLogs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StorePoolLogs", reflect.TypeOf((*MockIPoolLogsRepository)(nil).StorePoolLogs), arg0, arg1)
}
